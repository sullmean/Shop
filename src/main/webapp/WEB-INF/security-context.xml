<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
                    http://www.springframework.org/schema/beans/spring-beans.xsd
                    http://www.springframework.org/schema/security 
                    http://www.springframework.org/schema/security/spring-security.xsd">
    
    <!-- We will be defining all security related configurations in this file -->
	<!-- enable use-expressions -->
<!-- 	<http auto-config="true" use-expressions="true"> -->
		
<!-- 		<intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" /> -->
		
		<!-- access denied page -->
<!-- 		<access-denied-handler error-page="/403" /> -->
		
<!-- 		<form-login  -->
<!-- 		    login-page="/account"  -->
<!-- 		    login-processing-url="/j_spring_security_check" -->
<!-- 		    default-target-url="/index"  -->
<!-- 			authentication-failure-url="/login?error"  -->
<!-- 			username-parameter="juserEmail" -->
<!-- 			password-parameter="juserPass" /> -->
<!-- 		<logout logout-success-url="/login?logout"  /> -->
<!-- 			<logout logout-url="/logout" logout-success-url="/logoutsuccess" delete-cookies="JSESSIONID" invalidate-session="true" /> -->
		<!-- enable csrf protection -->
<!-- 		<csrf/> -->
<!-- 	</http> -->
	
	<!-- Select users and user_roles from database -->
<!-- 	<authentication-manager> -->
<!-- 	  <authentication-provider> -->
<!-- 		<jdbc-user-service data-source-ref="dataSource" -->
<!-- 		  users-by-username-query= -->
<!-- 		    "select userEmail, userPass, active from user where userEmail=?" -->
<!-- 		  authorities-by-username-query= -->
<!-- 		    "select userEmail, role from user where userEmail =?  " /> -->
<!-- 	  </authentication-provider> -->
<!-- 	</authentication-manager> -->
    
    

	<!-- 
	<beans:bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
	    <beans:property name="userDetailsService" ref="userDetailsService" ></beans:property>
	    
	</beans:bean>
	
	<beans:bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
	    <beans:property name="providers">
	        <beans:list>
	            <beans:ref local="daoAuthenticationProvider"/>
	        </beans:list>
	    </beans:property>
	</beans:bean>
	
	<authentication-manager>
	    <authentication-provider user-service-ref="userDetailsService">
	        <password-encoder hash="md5"></password-encoder>
	    </authentication-provider>
	</authentication-manager>
	-->
</beans:beans>